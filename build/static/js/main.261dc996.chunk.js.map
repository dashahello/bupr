{"version":3,"sources":["helpers/randomNumberBetween.js","helpers/randomRgbString.js","DEFAULT_TIMER_INPUT.js","themes.js","Components/OutOfGame/CustomTimer.js","Components/OutOfGame/DisplayResultMessage.js","Components/OutOfGame/DisplayMiscklicks.js","Components/OutOfGame/DisplayScore.js","Components/OutOfGame/DisplayTitle.js","Components/OutOfGame/MiscklicksSwitch.js","Components/OutOfGame/StartButton.js","Components/OutOfGame/ThemeSwitch.js","Components/OutOfGame/WaveDemo.js","Components/OutOfGame/DisplayInstructions.js","Components/OutOfGame/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["randomNumberBetween","min","max","Math","random","randomRgbString","maxChannelValue","DEFAULT_TIMER_INPUT","themes","light","createMuiTheme","type","palette","primary","main","purple","secondary","blue","bodyBackground","dark","CustomTimer","setTimerInput","timerInput","TextField","label","variant","onChange","evt","input","parseInt","target","value","DisplayResultMessage","score","gameInProgress","useState","message","setMessage","useEffect","Divider","Typography","DisplayMiscklicks","miscklicksEnabled","miscklicks","DisplayScore","bubbleClickCount","DisplayTitle","MiscklicksSwitch","setMiscklicksEnabled","FormControlLabel","control","Switch","checked","name","style","marginBottom","StartButton","handleButtonClick","Button","marginTop","onClick","color","ThemeSwitch","themeToUse","setThemeToUse","theme","useTheme","document","body","backgroundColor","themeToSet","localStorage","setItem","WaveDemo","dateMultipliers","xMod","x","yMod","y","setX","setY","interval","setInterval","sin","Date","now","cos","clearInterval","position","transform","window","innerWidth","innerHeight","width","height","borderRadius","top","left","background","opacity","zIndex","useStyles","makeStyles","root","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","DisplayInstructions","classes","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","display","flexDirection","padding","OutOfGame","waveDemoProps","setWaveDemoProps","_waveDemoProps","i","push","Container","maxWidth","map","props","Paper","InGame","lazy","App","setBubbleClickCount","totalClickCount","setTotalClickCount","setScore","setMiscklicks","setGameInProgress","getTotalClickCount","currentTotalClickCount","addEventListener","removeEventListener","getItem","ThemeProvider","fallback","CircularProgress","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.261dc996.chunk.js","sourcesContent":["export default function randomNumberBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n","export default function randomRgbString(maxChannelValue) {\n  return `rgb( ${Math.random() * maxChannelValue}, ${\n    Math.random() * maxChannelValue\n  }, ${Math.random() * maxChannelValue})`;\n}\n","const DEFAULT_TIMER_INPUT = 5;\n\nexport default DEFAULT_TIMER_INPUT;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport { blue } from '@material-ui/core/colors';\n\nconst light = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      main: purple[500]\n    },\n    secondary: {\n      main: blue[500]\n    },\n    bodyBackground: 'white'\n  }\n});\n\nconst dark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: purple[300]\n    },\n    secondary: {\n      main: blue[300]\n    },\n    bodyBackground: 'black'\n  }\n});\n\nconst themes = { light, dark };\n\nexport default themes;\n","import { TextField } from '@material-ui/core';\n\nexport default function CustomTimer({ setTimerInput, timerInput }) {\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Timer (seconds)\"\n      variant=\"outlined\"\n      onChange={(evt) => {\n        const input = parseInt(evt.target.value);\n        setTimerInput(input);\n      }}\n      value={timerInput}\n    />\n  );\n}\n","import { Divider, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\n\nexport default function DisplayResultMessage({\n  score,\n  timerInput,\n  gameInProgress\n}) {\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    setMessage(score > timerInput ? 'GOOD JOB!' : 'YOU CAN DO BETTER');\n  }, [score, gameInProgress]);\n  return (\n    <>\n      <Divider />\n      <Typography>{score !== null ? message : null}</Typography>\n    </>\n  );\n}\n","import { Typography } from '@material-ui/core';\n\nexport default function DisplayMiscklicks({ miscklicksEnabled, miscklicks }) {\n  if (miscklicks !== null) {\n    return <Typography variant=\"h5\">{`Misclicks: ${miscklicks}`}</Typography>;\n  } else {\n    return null;\n  }\n\n  // miscklicksEnabled ? (\n  //   <Typography variant=\"h5\">{`Misclicks: ${miscklicks}`}</Typography>\n  // ) : null;\n}\n// miscklicksEnabled &&\n","import { Divider, Typography } from '@material-ui/core';\n\nexport default function DisplayScore({ bubbleClickCount, score }) {\n  return bubbleClickCount !== null ? (\n    <>\n      <Divider />\n      <Typography variant=\"h4\">{`YOUR SCORE: ${score}`}</Typography>\n    </>\n  ) : null;\n}\n","import { Typography } from '@material-ui/core';\n\nexport default function DisplayTitle() {\n  return <Typography variant=\"h1\">BUPR</Typography>;\n}\n","import { Divider, FormControlLabel, Switch } from '@material-ui/core';\n\nexport default function MiscklicksSwitch({\n  setMiscklicksEnabled,\n  miscklicksEnabled\n}) {\n  return (\n    <>\n      <Divider />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={miscklicksEnabled === true}\n            onChange={() =>\n              setMiscklicksEnabled(miscklicksEnabled ? false : true)\n            }\n            name=\"checkedB\"\n          />\n        }\n        label=\"Miscklicks enabled\"\n      />\n      <Divider style={{ marginBottom: 8 }} />\n    </>\n  );\n}\n","import { Button } from '@material-ui/core';\n\nexport default function StartButton({ handleButtonClick }) {\n  return (\n    <Button\n      style={{ marginTop: 8 }}\n      onClick={handleButtonClick}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      START THE GAME\n    </Button>\n  );\n}\n","import { Divider, FormControlLabel, Switch, useTheme } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nexport default function ThemeSwitch({ themeToUse, setThemeToUse }) {\n  const theme = useTheme();\n\n  useEffect(() => {\n    document.body.style.backgroundColor = theme.palette.bodyBackground;\n  }, [theme]);\n\n  return (\n    <>\n      <Divider />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={themeToUse === 'dark'}\n            onChange={(evt) => {\n              const themeToSet = evt.target.checked ? 'dark' : 'light';\n              setThemeToUse(themeToSet);\n              localStorage.setItem('themeToUse', themeToSet);\n            }}\n            name=\"checkedA\"\n          />\n        }\n        label=\"Dark theme\"\n      />\n      <Divider />\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport default function WaveDemo({\n  dateMultipliers: { x: xMod, y: yMod },\n  color\n}) {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setX((Math.sin(Date.now() * xMod) + 1) / 2);\n      setY((Math.cos(Date.now() * yMod) + 1) / 2);\n    }, 1000 / 60);\n\n    return () => clearInterval(interval);\n  }, []); // eslint-disable-line\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        transform: `translate3d(${x * window.innerWidth * 0.9}px, ${\n          y * window.innerHeight * 0.9\n        }px, 0)`,\n        width: 50,\n        height: 50,\n        borderRadius: '100%',\n        top: 0,\n        left: 0,\n        background: color,\n        opacity: '70%',\n        zIndex: -1\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nexport default function DisplayInstructions() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Instructions</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>\n            Set up the timer below, press \"START THE GAME\" and try to pop as\n            many bubbles as possible (remember that every bubble has a lifetime\n            of 1 second so it will disappear unless you click on it). Good luck\n            :)\n          </Typography>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import { Container, makeStyles, Paper } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport randomNumberBetween from '../../helpers/randomNumberBetween';\nimport randomRgbString from '../../helpers/randomRgbString';\nimport CustomTimer from './CustomTimer';\nimport DisplayResultMessage from './DisplayResultMessage';\nimport DisplayMiscklicks from './DisplayMiscklicks';\nimport DisplayScore from './DisplayScore';\nimport DisplayTitle from './DisplayTitle';\nimport MiscklicksSwitch from './MiscklicksSwitch';\nimport StartButton from './StartButton';\nimport ThemeSwitch from './ThemeSwitch';\nimport WaveDemo from './WaveDemo';\nimport DisplayInstructions from './DisplayInstructions';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 8,\n    marginTop: 16,\n    zIndex: 1\n  }\n}));\n\nexport default function OutOfGame({\n  bubbleClickCount,\n  score,\n  themeToUse,\n  setThemeToUse,\n  message,\n  miscklicksEnabled,\n  miscklicks,\n  setMiscklicksEnabled,\n  setTimerInput,\n  timerInput,\n  handleButtonClick,\n  setMessage\n}) {\n  const classes = useStyles();\n\n  const [waveDemoProps, setWaveDemoProps] = useState(null);\n\n  useEffect(() => {\n    const _waveDemoProps = [];\n\n    for (let i = 0; i < 5; i++) {\n      _waveDemoProps.push({\n        dateMultipliers: {\n          x: randomNumberBetween(0.0003, 0.001),\n          y: randomNumberBetween(0.0003, 0.001)\n        },\n        color: randomRgbString(250)\n      });\n    }\n\n    setWaveDemoProps(_waveDemoProps);\n  }, []);\n\n  return (\n    <Container maxWidth=\"xs\">\n      {waveDemoProps\n        ? waveDemoProps.map((props, i) => <WaveDemo key={i} {...props} />)\n        : null}\n\n      <Paper className={classes.main}>\n        <DisplayTitle />\n        <DisplayInstructions />\n        <ThemeSwitch setThemeToUse={setThemeToUse} themeToUse={themeToUse} />\n        <DisplayResultMessage\n          message={message}\n          setMessage={setMessage}\n          score={score}\n          timerInput={timerInput}\n        />\n        <DisplayScore bubbleClickCount={bubbleClickCount} score={score} />\n        <DisplayMiscklicks\n          miscklicksEnabled={miscklicksEnabled}\n          miscklicks={miscklicks}\n        />\n        <MiscklicksSwitch\n          setMiscklicksEnabled={setMiscklicksEnabled}\n          miscklicksEnabled={miscklicksEnabled}\n        />\n        <CustomTimer setTimerInput={setTimerInput} timerInput={timerInput} />\n        <StartButton handleButtonClick={handleButtonClick} />\n      </Paper>\n    </Container>\n  );\n}\n","import { CircularProgress, ThemeProvider } from '@material-ui/core';\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './index.css';\nimport themes from './themes';\n//\n// import InGame from './Components/InGame';\nimport OutOfGame from './Components/OutOfGame';\nimport DEFAULT_TIMER_INPUT from './DEFAULT_TIMER_INPUT';\n//\n\nconst InGame = lazy(() => import('./Components/InGame'));\n\nfunction App() {\n  const [bubbleClickCount, setBubbleClickCount] = useState(null);\n  const [totalClickCount, setTotalClickCount] = useState(0);\n  const [score, setScore] = useState(null);\n  const [miscklicks, setMiscklicks] = useState(null);\n\n  const [gameInProgress, setGameInProgress] = useState(false);\n\n  const [timerInput, setTimerInput] = useState(DEFAULT_TIMER_INPUT);\n  const [miscklicksEnabled, setMiscklicksEnabled] = useState(false);\n\n  useEffect(() => {\n    if (miscklicksEnabled) {\n      setScore(bubbleClickCount - (totalClickCount - bubbleClickCount));\n      setMiscklicks(totalClickCount - bubbleClickCount);\n    } else {\n      setScore(bubbleClickCount);\n    }\n  }, [gameInProgress]); // eslint-disable-line\n\n  useEffect(() => {\n    function getTotalClickCount() {\n      setTotalClickCount(\n        (currentTotalClickCount) => currentTotalClickCount + 1\n      );\n    }\n    if (gameInProgress && miscklicksEnabled) {\n      window.addEventListener('click', getTotalClickCount);\n      return () => {\n        window.removeEventListener('click', getTotalClickCount);\n      };\n    }\n  }, [miscklicksEnabled, gameInProgress]);\n\n  function handleButtonClick() {\n    setBubbleClickCount(0);\n    setTotalClickCount(0);\n    setMiscklicks(null);\n    setGameInProgress(true);\n  }\n\n  // const isTablet = useIsTablet();\n\n  const [themeToUse, setThemeToUse] = useState(\n    localStorage.getItem('themeToUse')\n  );\n\n  return (\n    <ThemeProvider theme={themes[themeToUse]}>\n      {gameInProgress ? (\n        <Suspense fallback={<CircularProgress />}>\n          <InGame\n            timerInput={timerInput}\n            bubbleClickCount={bubbleClickCount}\n            setBubbleClickCount={setBubbleClickCount}\n            setTimerInput={setTimerInput}\n            setGameInProgress={setGameInProgress}\n            miscklicksEnabled={miscklicksEnabled}\n            score={score}\n          />\n        </Suspense>\n      ) : (\n        <>\n          <OutOfGame\n            bubbleClickCount={bubbleClickCount}\n            score={score}\n            themeToUse={themeToUse}\n            setThemeToUse={setThemeToUse}\n            miscklicksEnabled={miscklicksEnabled}\n            miscklicks={miscklicks}\n            setMiscklicksEnabled={setMiscklicksEnabled}\n            setTimerInput={setTimerInput}\n            timerInput={timerInput}\n            handleButtonClick={handleButtonClick}\n          />\n        </>\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}