{"version":3,"sources":["helpers/randomNumberBetween.js","helpers/randomRgbString.js","DEFAULT_TIMER_INPUT.js","themes.js","Components/OutOfGame/CustomTimer.js","Components/OutOfGame/DisplayMessage.js","Components/OutOfGame/DisplayMiscklicks.js","Components/OutOfGame/DisplayScore.js","Components/OutOfGame/DisplayTitle.js","Components/OutOfGame/MiscklicksSwitch.js","Components/OutOfGame/StartButton.js","Components/OutOfGame/ThemeSwitch.js","Components/OutOfGame/WaveDemo.js","Components/OutOfGame/index.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["randomNumberBetween","min","max","Math","random","randomRgbString","maxChannelValue","themes","light","createMuiTheme","type","palette","primary","main","purple","secondary","blue","bodyBackground","dark","CustomTimer","setTimerInput","timerInput","TextField","label","variant","onChange","evt","input","parseInt","target","value","DisplayMessage","message","Typography","DisplayMiscklicks","miscklicksEnabled","miscklicks","DisplayScore","bubbleClickCount","score","Divider","DisplayTitle","MiscklicksSwitch","setMiscklicksEnabled","FormControlLabel","control","Switch","checked","name","style","marginBottom","StartButton","handleButtonClick","Button","marginTop","onClick","color","ThemeSwitch","themeToUse","setThemeToUse","theme","useTheme","useEffect","document","body","backgroundColor","themeToSet","localStorage","setItem","WaveDemo","dateMultipliers","xMod","x","yMod","y","useState","setX","setY","setInterval","sin","Date","now","cos","position","transform","window","innerWidth","innerHeight","width","height","borderRadius","top","left","background","opacity","zIndex","useStyles","makeStyles","display","flexDirection","padding","OutOfGame","classes","Container","maxWidth","Array","fill","map","_","i","Paper","className","InGame","lazy","App","setBubbleClickCount","totalClickCount","setTotalClickCount","setScore","setMiscklicks","gameInProgress","setGameInProgress","setMessage","DEFAULT_TIMER_INPUT","getTotalClickCount","currentTotalClickCount","addEventListener","removeEventListener","getItem","ThemeProvider","fallback","CircularProgress","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"6FAAe,SAASA,EAAoBC,EAAKC,GAC/C,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,EADvC,mC,gCCAe,SAASI,EAAgBC,GACtC,MAAM,QAAN,OAAeH,KAAKC,SAAWE,EAA/B,aACEH,KAAKC,SAAWE,EADlB,aAEKH,KAAKC,SAAWE,EAFrB,KADF,mC,gCCAe,O,0JCgCAC,EAFA,CAAEC,MA1BHC,YAAe,CAC3BC,KAAM,QACNC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAK,MAEbC,eAAgB,WAiBIC,KAbXT,YAAe,CAC1BE,QAAS,CACPD,KAAM,OACNE,QAAS,CACPC,KAAMC,IAAO,MAEfC,UAAW,CACTF,KAAMG,IAAK,MAEbC,eAAgB,Y,2DCxBL,SAASE,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WACnD,OACE,cAACC,EAAA,EAAD,CACEZ,KAAK,SACLa,MAAM,kBACNC,QAAQ,WACRC,SAAU,SAACC,GACT,IAAMC,EAAQC,SAASF,EAAIG,OAAOC,OAClCV,EAAcO,IAEhBG,MAAOT,I,YCVE,SAASU,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OAAO,cAACC,EAAA,EAAD,UAAaD,ICDP,SAASE,EAAT,GAA8D,EAAjCC,kBAAkC,IAAfC,EAAc,EAAdA,WAC7D,OAAmB,OAAfA,EACK,cAACH,EAAA,EAAD,CAAYT,QAAQ,KAApB,8BAAwCY,KAExC,K,aCJI,SAASC,EAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,iBAAkBC,EAAS,EAATA,MACvD,OAA4B,OAArBD,EACL,qCACE,cAACE,EAAA,EAAD,IACA,cAACP,EAAA,EAAD,CAAYT,QAAQ,KAApB,+BAAyCe,QAEzC,KCNS,SAASE,IACtB,OAAO,cAACR,EAAA,EAAD,CAAYT,QAAQ,KAApB,kB,sBCDM,SAASkB,EAAT,GAGX,IAFFC,EAEC,EAFDA,qBACAR,EACC,EADDA,kBAEA,OACE,qCACE,cAACK,EAAA,EAAD,IACA,cAACI,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,SAA+B,IAAtBZ,EACTV,SAAU,kBACRkB,GAAqBR,IAEvBa,KAAK,aAGTzB,MAAM,uBAER,cAACiB,EAAA,EAAD,CAASS,MAAO,CAAEC,aAAc,Q,aCnBvB,SAASC,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,kBACpC,OACE,cAACC,EAAA,EAAD,CACEJ,MAAO,CAAEK,UAAW,GACpBC,QAASH,EACT5B,QAAQ,YACRgC,MAAM,UAJR,4B,YCDW,SAASC,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,cAC1CC,EAAQC,cAMd,OAJAC,qBAAU,WACRC,SAASC,KAAKf,MAAMgB,gBAAkBL,EAAMjD,QAAQM,iBACnD,CAAC2C,IAGF,qCACE,cAACpB,EAAA,EAAD,IACA,cAACI,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAwB,SAAfW,EACTjC,SAAU,SAACC,GACT,IAAMwC,EAAaxC,EAAIG,OAAOkB,QAAU,OAAS,QACjDY,EAAcO,GACdC,aAAaC,QAAQ,aAAcF,IAErClB,KAAK,aAGTzB,MAAM,eAER,cAACiB,EAAA,EAAD,OCxBS,SAAS6B,EAAT,GAGX,IAAD,IAFDC,gBAAsBC,EAErB,EAFkBC,EAAYC,EAE9B,EAF2BC,EAC5BlB,EACC,EADDA,MACC,EACiBmB,mBAAS,GAD1B,mBACMH,EADN,KACSI,EADT,OAEiBD,mBAAS,GAF1B,mBAEMD,EAFN,KAESG,EAFT,KAWD,OAPAf,qBAAU,WACRgB,aAAY,WACVF,GAAMzE,KAAK4E,IAAIC,KAAKC,MAAQV,GAAQ,GAAK,GACzCM,GAAM1E,KAAK+E,IAAIF,KAAKC,MAAQR,GAAQ,GAAK,KACxC,IAAO,MACT,IAGD,qBACExB,MAAO,CACLkC,SAAU,QACVC,UAAU,eAAD,OAAiBZ,EAAIa,OAAOC,WAAa,GAAzC,eACPZ,EAAIW,OAAOE,YAAc,GADlB,UAGTC,MAAO,GACPC,OAAQ,GACRC,aAAc,OACdC,IAAK,EACLC,KAAM,EACNC,WAAYrC,EACZsC,QAAS,MACTC,QAAS,KCjBjB,IAAMC,EAAYC,aAAW,SAACrC,GAAD,MAAY,CACvC/C,KAAM,CACJqF,QAAS,OACTC,cAAe,SACfC,QAAS,EACT9C,UAAW,GACXyC,OAAQ,OAIG,SAASM,EAAT,GAYX,IAXF/D,EAWC,EAXDA,iBACAC,EAUC,EAVDA,MACAmB,EASC,EATDA,WACAC,EAQC,EARDA,cACA3B,EAOC,EAPDA,QACAG,EAMC,EANDA,kBACAC,EAKC,EALDA,WACAO,EAIC,EAJDA,qBACAvB,EAGC,EAHDA,cACAC,EAEC,EAFDA,WACA+B,EACC,EADDA,kBAEMkD,EAAUN,IAEhB,OACE,eAACO,EAAA,EAAD,CAAWC,SAAS,KAApB,UACGC,MAAM,GACJC,KAAK,MACLC,KAAI,SAACC,EAAGC,GAAJ,OACH,cAACxC,EAAD,CACEC,gBAAiB,CACfE,EAAGxE,YAAoB,KAAQ,MAC/B0E,EAAG1E,YAAoB,KAAQ,OAEjCwD,MAAOnD,YAAgB,UAI7B,eAACyG,EAAA,EAAD,CAAOC,UAAWT,EAAQzF,KAA1B,UACE,cAAC4B,EAAD,IACA,cAACgB,EAAD,CAAaC,WAAYA,EAAYC,cAAeA,IACpD,cAAC5B,EAAD,CAAgBC,QAASA,IACzB,cAACK,EAAD,CAAcC,iBAAkBA,EAAkBC,MAAOA,IACzD,cAACL,EAAD,CACEC,kBAAmBA,EACnBC,WAAYA,IAEd,cAACM,EAAD,CACEC,qBAAsBA,EACtBR,kBAAmBA,IAErB,cAAChB,EAAD,CAAaC,cAAeA,EAAeC,WAAYA,IACvD,cAAC8B,EAAD,CAAaC,kBAAmBA,U,YCnDlC4D,EAASC,gBAAK,kBAAM,iCAsFXC,MApFf,WAAgB,IAAD,EACmCvC,mBAAS,MAD5C,mBACNrC,EADM,KACY6E,EADZ,OAEiCxC,mBAAS,GAF1C,mBAENyC,EAFM,KAEWC,EAFX,OAGa1C,mBAAS,GAHtB,mBAGNpC,EAHM,KAGC+E,EAHD,OAIuB3C,mBAAS,MAJhC,mBAINvC,EAJM,KAIMmF,EAJN,OAM+B5C,oBAAS,GANxC,mBAMN6C,EANM,KAMUC,EANV,OAOiB9C,mBAC5B,+MARW,mBAON3C,EAPM,KAOG0F,EAPH,OAWuB/C,mBAASgD,KAXhC,mBAWNtG,EAXM,KAWMD,EAXN,OAYqCuD,oBAAS,GAZ9C,mBAYNxC,EAZM,KAYaQ,EAZb,KAcbmB,qBAAU,WACJ3B,GACFmF,EAAShF,GAAoB8E,EAAkB9E,IAC/CiF,EAAcH,EAAkB9E,IAEhCgF,EAAShF,KAEV,CAACkF,IAEJ1D,qBAAU,WACR,SAAS8D,IACPP,GACE,SAACQ,GAAD,OAA4BA,EAAyB,KAGzD,GAAIL,GAAkBrF,EAEpB,OADAkD,OAAOyC,iBAAiB,QAASF,GAC1B,WACLvC,OAAO0C,oBAAoB,QAASH,OAhC7B,MA8CuBjD,mBAClCR,aAAa6D,QAAQ,eA/CV,mBA8CNtE,EA9CM,KA8CMC,EA9CN,KAkDb,OACE,cAACsE,EAAA,EAAD,CAAerE,MAAOrD,EAAOmD,GAA7B,SACG8D,EACC,cAAC,WAAD,CAAUU,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,cAACnB,EAAD,CACE3F,WAAYA,EACZiB,iBAAkBA,EAClB6E,oBAAqBA,EACrB/F,cAAeA,EACfqG,kBAAmBA,EACnBC,WAAYA,MAIhB,mCACE,cAACrB,EAAD,CACE/D,iBAAkBA,EAClBC,MAAOA,EACPmB,WAAYA,EACZC,cAAeA,EACf3B,QAASA,EACTG,kBAAmBA,EACnBC,WAAYA,EACZO,qBAAsBA,EACtBvB,cAAeA,EACfC,WAAYA,EACZ+B,kBAvCV,WACE+D,EAAoB,GACpBE,EAAmB,GACnBE,EAAc,MACdE,GAAkB,WC/ChBW,EAAcC,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OAAO,cAAC,EAAD,IAAS/F,SAASgG,eAAe,SDe1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,cAAwB5E,OAAOiD,SAAS4B,MACpDC,SAAW9E,OAAOiD,SAAS6B,OAIvC,OAGF9E,OAAOyC,iBAAiB,QAAQ,WAC9B,IAAMY,EAAK,UAAMuB,cAAN,sBAEP7B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAACuB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAACC,GAClCA,EAAa4B,aAAa7B,MAAK,WAC7B1D,OAAOiD,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFVsB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,OCzC/BoC,K","file":"static/js/main.143cbe9f.chunk.js","sourcesContent":["export default function randomNumberBetween(min, max) {\n  return Math.random() * (max - min) + min;\n}\n","export default function randomRgbString(maxChannelValue) {\n  return `rgb( ${Math.random() * maxChannelValue}, ${\n    Math.random() * maxChannelValue\n  }, ${Math.random() * maxChannelValue})`;\n}\n","export default 5;\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport { blue } from '@material-ui/core/colors';\n\nconst light = createMuiTheme({\n  type: 'light',\n  palette: {\n    primary: {\n      main: purple[500]\n    },\n    secondary: {\n      main: blue[500]\n    },\n    bodyBackground: 'white'\n  }\n});\n\nconst dark = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: purple[300]\n    },\n    secondary: {\n      main: blue[300]\n    },\n    bodyBackground: 'black'\n  }\n});\n\nconst themes = { light, dark };\n\nexport default themes;\n","import { TextField } from '@material-ui/core';\n\nexport default function CustomTimer({ setTimerInput, timerInput }) {\n  return (\n    <TextField\n      type=\"number\"\n      label=\"Timer (seconds)\"\n      variant=\"outlined\"\n      onChange={(evt) => {\n        const input = parseInt(evt.target.value);\n        setTimerInput(input);\n      }}\n      value={timerInput}\n    />\n  );\n}\n","import { Typography } from '@material-ui/core';\n\nexport default function DisplayMessage({ message }) {\n  return <Typography>{message}</Typography>;\n}\n","import { Typography } from '@material-ui/core';\n\nexport default function DisplayMiscklicks({ miscklicksEnabled, miscklicks }) {\n  if (miscklicks !== null) {\n    return <Typography variant=\"h5\">{`Misclicks: ${miscklicks}`}</Typography>;\n  } else {\n    return null;\n  }\n\n  // miscklicksEnabled ? (\n  //   <Typography variant=\"h5\">{`Misclicks: ${miscklicks}`}</Typography>\n  // ) : null;\n}\n// miscklicksEnabled &&\n","import { Divider, Typography } from '@material-ui/core';\n\nexport default function DisplayScore({ bubbleClickCount, score }) {\n  return bubbleClickCount !== null ? (\n    <>\n      <Divider />\n      <Typography variant=\"h4\">{`YOUR SCORE: ${score}`}</Typography>\n    </>\n  ) : null;\n}\n","import { Typography } from '@material-ui/core';\n\nexport default function DisplayTitle() {\n  return <Typography variant=\"h1\">BUPR</Typography>;\n}\n","import { Divider, FormControlLabel, Switch } from '@material-ui/core';\n\nexport default function MiscklicksSwitch({\n  setMiscklicksEnabled,\n  miscklicksEnabled\n}) {\n  return (\n    <>\n      <Divider />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={miscklicksEnabled === true}\n            onChange={() =>\n              setMiscklicksEnabled(miscklicksEnabled ? false : true)\n            }\n            name=\"checkedB\"\n          />\n        }\n        label=\"Miscklicks enabled\"\n      />\n      <Divider style={{ marginBottom: 8 }} />\n    </>\n  );\n}\n","import { Button } from '@material-ui/core';\n\nexport default function StartButton({ handleButtonClick }) {\n  return (\n    <Button\n      style={{ marginTop: 8 }}\n      onClick={handleButtonClick}\n      variant=\"contained\"\n      color=\"primary\"\n    >\n      START THE GAME\n    </Button>\n  );\n}\n","import { Divider, FormControlLabel, Switch, useTheme } from '@material-ui/core';\nimport { useEffect } from 'react';\n\nexport default function ThemeSwitch({ themeToUse, setThemeToUse }) {\n  const theme = useTheme();\n\n  useEffect(() => {\n    document.body.style.backgroundColor = theme.palette.bodyBackground;\n  }, [theme]);\n\n  return (\n    <>\n      <Divider />\n      <FormControlLabel\n        control={\n          <Switch\n            checked={themeToUse === 'dark'}\n            onChange={(evt) => {\n              const themeToSet = evt.target.checked ? 'dark' : 'light';\n              setThemeToUse(themeToSet);\n              localStorage.setItem('themeToUse', themeToSet);\n            }}\n            name=\"checkedA\"\n          />\n        }\n        label=\"Dark theme\"\n      />\n      <Divider />\n    </>\n  );\n}\n","import { Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\n\nexport default function WaveDemo({\n  dateMultipliers: { x: xMod, y: yMod },\n  color\n}) {\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => {\n      setX((Math.sin(Date.now() * xMod) + 1) / 2);\n      setY((Math.cos(Date.now() * yMod) + 1) / 2);\n    }, 1000 / 60);\n  }, []);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        transform: `translate3d(${x * window.innerWidth * 0.9}px, ${\n          y * window.innerHeight * 0.9\n        }px, 0)`,\n        width: 50,\n        height: 50,\n        borderRadius: '100%',\n        top: 0,\n        left: 0,\n        background: color,\n        opacity: '70%',\n        zIndex: -1\n      }}\n    />\n  );\n}\n","import { Container, makeStyles, Paper } from '@material-ui/core';\nimport { lazy, Suspense } from 'react';\nimport randomNumberBetween from '../../helpers/randomNumberBetween';\nimport randomRgbString from '../../helpers/randomRgbString';\nimport CustomTimer from './CustomTimer';\nimport DisplayMessage from './DisplayMessage';\nimport DisplayMiscklicks from './DisplayMiscklicks';\nimport DisplayScore from './DisplayScore';\nimport DisplayTitle from './DisplayTitle';\nimport MiscklicksSwitch from './MiscklicksSwitch';\nimport StartButton from './StartButton';\nimport ThemeSwitch from './ThemeSwitch';\nimport WaveDemo from './WaveDemo';\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 8,\n    marginTop: 16,\n    zIndex: 1\n  }\n}));\n\nexport default function OutOfGame({\n  bubbleClickCount,\n  score,\n  themeToUse,\n  setThemeToUse,\n  message,\n  miscklicksEnabled,\n  miscklicks,\n  setMiscklicksEnabled,\n  setTimerInput,\n  timerInput,\n  handleButtonClick\n}) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"xs\">\n      {Array(5)\n        .fill(null)\n        .map((_, i) => (\n          <WaveDemo\n            dateMultipliers={{\n              x: randomNumberBetween(0.0003, 0.001),\n              y: randomNumberBetween(0.0003, 0.001)\n            }}\n            color={randomRgbString(250)}\n          />\n        ))}\n\n      <Paper className={classes.main}>\n        <DisplayTitle />\n        <ThemeSwitch themeToUse={themeToUse} setThemeToUse={setThemeToUse} />\n        <DisplayMessage message={message} />\n        <DisplayScore bubbleClickCount={bubbleClickCount} score={score} />\n        <DisplayMiscklicks\n          miscklicksEnabled={miscklicksEnabled}\n          miscklicks={miscklicks}\n        />\n        <MiscklicksSwitch\n          setMiscklicksEnabled={setMiscklicksEnabled}\n          miscklicksEnabled={miscklicksEnabled}\n        />\n        <CustomTimer setTimerInput={setTimerInput} timerInput={timerInput} />\n        <StartButton handleButtonClick={handleButtonClick} />\n      </Paper>\n    </Container>\n  );\n}\n","import {\n  CircularProgress,\n  Container,\n  makeStyles,\n  Paper,\n  ThemeProvider\n} from '@material-ui/core';\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport './index.css';\nimport themes from './themes';\n//\n// import InGame from './Components/InGame';\nimport OutOfGame from './Components/OutOfGame';\nimport DEFAULT_TIMER_INPUT from './DEFAULT_TIMER_INPUT';\n//\n\nconst InGame = lazy(() => import('./Components/InGame'));\n\nfunction App() {\n  const [bubbleClickCount, setBubbleClickCount] = useState(null);\n  const [totalClickCount, setTotalClickCount] = useState(0);\n  const [score, setScore] = useState(0);\n  const [miscklicks, setMiscklicks] = useState(null);\n\n  const [gameInProgress, setGameInProgress] = useState(false);\n  const [message, setMessage] = useState(\n    'Set up the timer below, press \"START THE GAME\" and try to pop as many bubbles as possible (remember that every bubble has a lifetime of 1 second so it will disappear unless you click on it). Good luck :)'\n  );\n\n  const [timerInput, setTimerInput] = useState(DEFAULT_TIMER_INPUT);\n  const [miscklicksEnabled, setMiscklicksEnabled] = useState(false);\n\n  useEffect(() => {\n    if (miscklicksEnabled) {\n      setScore(bubbleClickCount - (totalClickCount - bubbleClickCount));\n      setMiscklicks(totalClickCount - bubbleClickCount);\n    } else {\n      setScore(bubbleClickCount);\n    }\n  }, [gameInProgress]);\n\n  useEffect(() => {\n    function getTotalClickCount() {\n      setTotalClickCount(\n        (currentTotalClickCount) => currentTotalClickCount + 1\n      );\n    }\n    if (gameInProgress && miscklicksEnabled) {\n      window.addEventListener('click', getTotalClickCount);\n      return () => {\n        window.removeEventListener('click', getTotalClickCount);\n      };\n    }\n  });\n\n  function handleButtonClick() {\n    setBubbleClickCount(0);\n    setTotalClickCount(0);\n    setMiscklicks(null);\n    setGameInProgress(true);\n  }\n\n  // const isTablet = useIsTablet();\n\n  const [themeToUse, setThemeToUse] = useState(\n    localStorage.getItem('themeToUse')\n  );\n\n  return (\n    <ThemeProvider theme={themes[themeToUse]}>\n      {gameInProgress ? (\n        <Suspense fallback={<CircularProgress />}>\n          <InGame\n            timerInput={timerInput}\n            bubbleClickCount={bubbleClickCount}\n            setBubbleClickCount={setBubbleClickCount}\n            setTimerInput={setTimerInput}\n            setGameInProgress={setGameInProgress}\n            setMessage={setMessage}\n          />\n        </Suspense>\n      ) : (\n        <>\n          <OutOfGame\n            bubbleClickCount={bubbleClickCount}\n            score={score}\n            themeToUse={themeToUse}\n            setThemeToUse={setThemeToUse}\n            message={message}\n            miscklicksEnabled={miscklicksEnabled}\n            miscklicks={miscklicks}\n            setMiscklicksEnabled={setMiscklicksEnabled}\n            setTimerInput={setTimerInput}\n            timerInput={timerInput}\n            handleButtonClick={handleButtonClick}\n          />\n        </>\n      )}\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}